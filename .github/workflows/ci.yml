name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - name: 🛎️  Checkout code
        uses: actions/checkout@v4

      - name: 🔧  Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦  Install deps (including devDependencies)
        # Ensure devDependencies like autoprefixer are installed
        run: npm ci
        env:
          # Overrides the default production behavior so devDependencies aren't skipped
          npm_config_production: false

      - name: 🔍  Lint
        run: npm run lint --if-present

      - name: 🧪  Unit + Integration tests
        run: npm test --if-present

      - name: 🎲  Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

  build:
    name: Production Build
    needs: lint-test
    runs-on: ubuntu-latest

    env:
      # Only set NODE_ENV=production for the build itself,
      # but installing deps will still pull in devDependencies
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - name: 🛎️  Checkout code
        uses: actions/checkout@v4

      - name: 🔧  Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦  Install deps (including devDependencies)
        run: npm ci
        env:
          npm_config_production: false

      - name: 🔨  Build Next.js for production
        # Here we explicitly set NODE_ENV=production so Next knows to optimize
        run: NODE_ENV=production npm run build
